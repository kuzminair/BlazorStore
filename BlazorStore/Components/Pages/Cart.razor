@page "/cart"
@rendermode InteractiveServer
<PageTitle>Корзина</PageTitle>
<h3>Корзина</h3>
<table class="table">
    <thead>
        <tr>
            <th>Фото</th>
            <th>Наименование</th>
            <th>Количество</th>
            <th>Цена, рублей</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Item.cart)
        {
            summ+= @item.Price;
            <tr>
                <td>
                    <a href="productDescription">
                        <img src="images/@item.imgPath" width="70" height="70" alt="" />
                    </a>
                </td>
                <td>@item.Name</td>
                <td>1</td>
                <td>@item.Price</td>
                <td><button class="btn btn-danger" @onclick="()=> deleteItem(item.Id)">Удалить</button></td>
            </tr>

        }
    </tbody>
    <thead>
        <tr>
            <th>ИТОГО</th>
            <th></th>
            <th></th>
            <th>@summ</th>
        </tr>
    </thead>
    <thead>
        <tr>
            <th></th>
            <th></th>
            <th></th>
            <th></th>
            <th><button class="btn btn-danger" @onclick="()=> orderCreate(Item.cart)">Оформить заказ</button></th>        
        </tr>
    </thead>
</table>
@if (_ok)
{
    <div class="form-group">
        <label style="color: red">Заказ оформлен</label>
        <button class="btn btn-danger" @onclick="ok">OK</button>
    </div>
}
<div class="btn btn-danger"><a href="orders">Перейти в заказы</a></div>


@code {
    bool _ok = false;
    decimal summ = 0;
    void deleteItem(int itemId)
    {
        var item = Item.cart.FirstOrDefault(t => t.Id == itemId);
        if (item != null)
        {
            Item.cart.Remove(item);
            summ = 0;
        }
    }

    void orderCreate(List<Item> cart)
    {
        Order newOrder = new Order
            {
                DateCreate = DateTime.Now,
                Summ = summ,
                Items = cart
            };
        Order.orderList.Add(newOrder);
        _ok = true;
    }
    void ok()
    {
        _ok = false;

    }

    // async Task CreateTask()
    // {
    //     if (!string.IsNullOrEmpty(newTaskTitle))
    //     {
    //         var options = new DbContextOptionsBuilder<AppDBContext>()
    //         .UseSqlite("Data Source=tasks.db").Options;
    //         using (var dbContext = new AppDBContext(options))
    //         {
    //             var newTask = new TaskItem
    //                 {
    //                     Title = newTaskTitle,
    //                     Description = newTaskDescription,
    //                     CreatedDate = DateTime.Now
    //                 };
    //             dbContext.Tasks.Add(newTask);
    //             dbContext.SaveChanges();
    //             await LoadTasks();
    //         }

    //         newTaskTitle = "";
    //         newTaskDescription = "";
    //     }
    // }




}
